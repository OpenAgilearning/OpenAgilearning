template(name="envs")
  .container
    .row.clearfix
      +envPageEnvUserConfigsBlock
      +envsPageDockerInstancesBlock

      //- .runningEnvIframeBlock
      //-   a.hideInstance.btn.btn-default Hide Instance
      //-   a.reconnectInstance.btn.btn-default Reconnect Instance
      //-   iframe#runningEnv(src="", width="100%", height="550px", scrolling="yes")
      //- +envsTable

template(name="envPageEnvUserConfigsBlock")
  h2 Setup Configs:
  if hasUnsettingEnvUserConfigs
    p (need to setup)
    +envPageEnvConfigTypesTable filteredEnvConfigTypes=filteredEnvConfigTypes
   
  if hasEnvUserConfigs
    p (already setup)
    +profilePageEnvUserConfigsTable
  
  +profilePageEnvConfigsForm userConfigId=userConfigId envConfigTypeId=envConfigTypeId


template(name="envPageEnvConfigTypesTable")
  +reactiveTable settings=settings

template(name="envPageEnvConfigTypesTableConfigEnvsField")
  ul
    each configs.envs
      if mustHave
        li (need) {{name}}
      else
        li {{name}}


template(name="envPageEnvConfigTypesTableEditBtnField")
  botton.envConfigEditBtn.btn.btn-warning(envConfigTypeId="{{_id}}") Edit


template(name="envPageEnvConfigTypesTableRelatedCoursesField")
  +EnvConfigTypesRelatedCoursesField _id=_id

template(name="EnvConfigTypesRelatedCoursesField")
  ul
    each configTypeCourses
      li 
        a(href="{{pathFor 'course' courseId=_id}}") {{courseName}}



template(name="envsPageDockerInstancesBlock")
  h2 Servers' Instance:
  +profilePageDockerInstancesTable



template(name="envsTable")
  +reactiveTable settings=settings

template(name="envPicture")
  img(width="{{width}}",src="{{getEnvPictureURL envDoc}}")
  

template(name="envPictureField")
  +envPicture envDoc=this width="300px"



