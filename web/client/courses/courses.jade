
template(name="course")
  .container
    .row.clearfix
      .col-md-3.column
        +dockerImagePicture dockerImage=course.dockerImage width="100%"
        h2 {{course.courseName}}
        p {{course.description}}
      .col-md-9.column
        h2 Classrooms:
        +courseClassroomsTable


template(name="courseClassroomsTable")
  +reactiveTable settings=settings        

template(name="goToClassroomBtn")
  a.btn.btn-warning(href="{{pathFor 'classroom' classroomId=_id}}") Go To Classroom

template(name="classroom")
  .container
    .row.clearfix
      .col-md-9.column
        ul.nav.nav-tabs
          li.active
            a(data-toggle="tab", href="#CourseInfo") Info

          if course.video
            li
              a(data-toggle="tab", href="#Video") Video
          
          if course.dockerImage
            li
              a(data-toggle="tab", href="#Environment") Environment
          
          if course.slides
            li
              a(data-toggle="tab", href="#Slides") Slides

          

        .tab-content
          .tab-pane.fade.in.active#CourseInfo
            br 
            +dockerImagePicture dockerImage=course.dockerImage width="300px"
            h2 {{course.courseName}}
            p {{course.description}}

          if course.video
            .tab-pane.fade#Video
              video.video-js.vjs-default-skin(id="vid",src="",controls,width="100%",height="700px",data-setup='{ "techOrder": ["youtube"], "src": "{{course.video}}" }')
                    
          if course.dockerImage
            .tab-pane.fade#Environment
              br
              input.connectEnvBtn.btn.btn-default(value="Connect Environment Again")
              iframe#docker(src="http://{{rootURL}}:{{docker.servicePort}}",servicePort="{{docker.servicePort}}",rootURL="{{rootURL}}", width="100%", height="550px", scrolling="yes")

          
          if course.slides
            .tab-pane.fade#Slides
              iframe#slides(src="{{course.slides}}", width="100%", height="700px", scrolling="auto")

      +chatroom classroomId=classroomId

template(name="courses")
  .container
    .row.clearfix
      .col-md-12.column
        //- +voteForMe
        if isInRole "admin" "system"
          hr
          h2 Add New Course

          +quickForm id="demo" schema="coursesSchema" type="method" meteormethod="createCourse" template="bootstrap3-inline" label-class="sr-only" afFieldInput-placeholder="schemaLabel"

        hr
        h2 Study Materials:
        table.table.table-hover
          thead
            th Name
            th Docker
            th Ref. (Slide/Note/Site)
            th Video
            //- th Description
            th Creator's Name
            if isInRole "admin" "system"
              th Create / Delete
          tbody
            //- if isAdmin
            //-   tr
            //-     td
            //-       input.courseName
            //-     td
            //-       input.dockerImage
            //-     td
            //-       input.slides
            //-     td
            //-       input.description
            //-     td
            //-       p {{user.profile.name}}
            //-     td
            //-       input.createBt.btn.btn-default(value="Create")


            //- tr
            //-   td
            //-     a(href="{{pathFor 'ipynb' cid='ipynb'}}") Try IPyNB
            //-   td
            //-     a(target="_blank",href="https://registry.hub.docker.com/u/c3h3/oblas-py278-shogun-ipynb") c3h3/oblas-py278-shogun-ipynb
            //-   td
            //-     p Link
            //-   //- td
            //-   td
            //-   td

            //- tr
            //-   td
            //-     a(href="{{pathFor 'rstudio' cid='rstudio'}}") Try RStudio
            //-   td
            //-     a(target="_blank",href="https://registry.hub.docker.com/u/rocker/rstudio") rocker/rstudio
            //-   td
            //-     p Link
            //-   //- td
            //-   td
            //-   td


            each courses
              tr
                td
                  a(href="{{pathFor 'course' cid=_id}}") {{courseName}}
                td
                  a(target="_blank",href="https://registry.hub.docker.com/u/{{dockerImage}}") {{dockerImage}}
                td
                  a(target="_blank",href="{{slides}}") Link
                td
                  if video
                    a(target="_blank",href="{{video}}") Video
                //- td {{description}}
                td {{creatorName}}

                if isInRole "admin" "system"
                  td
                    input.btn.btn-warning.courseDeleteBtn(type="button" value="Delete")




template(name="analyzer")
  .container
    //- +voteForMe
    hr
    a.btn.btn-default(target="_blank",href="{{baseImageUrl}}") Browse Base Image ({{docker.imageId}}) on Docker Hub
    hr
    //- a.goBt.btn.btn-default(target="_blank",href="http://{{rootURL}}:{{docker.servicePort}}") Go to {{name}} page
    //- hr
  .container
    .col-md-10.column
      .tabbable
        .tab-pane.active

          input.connectBt.btn.btn-default(value="Connect to Docker")
          iframe#docker(src="http://{{rootURL}}:{{docker.servicePort}}", width="100%", height="550px", scrolling="yes")
            p Your browser does not support iframes.

    .col-md-2.column
      +chatroom

