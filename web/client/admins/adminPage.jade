
template(name="AdminPage")
  .container
    ul.nav.nav-tabs
      li.active
        a(data-toggle="tab", href="#info") Info
      if isInRole "admin" "dockers"
        li
          a(data-toggle="tab", href="#dockerServersMonitor") Docker Servers Monitor
        li
          a(data-toggle="tab", href="#dockerJobs") Docker Jobs
        li
          a(data-toggle="tab", href="#envsSettings") Envs Settings
      if isInRole "admin" "system"
        li
          a(data-toggle="tab", href="#rolesSetting") Roles Setting

        //- li
        //-   a(data-toggle="tab", href="#editMsgBoard") Message Board
        //- li
        //-   a(data-toggle="tab", href="#userStatus") User Status

    .tab-content
      .tab-pane.fade.in.active#info
        h2 [TODO List:Admin Info Page]
        h2 TODO: Listing my admin roles
      if isInRole "admin" "dockers"
        .tab-pane.fade#dockerServersMonitor

          h2 Docker Servers
          +adminPageDockerServersTable

          hr

          h2 Docker Server Images
          +adminPageDockerServerImagesTable

          h2 Docker Server Containers
          +adminPageDockerServerContainersTable

          hr


        .tab-pane.fade#dockerJobs
          .row
            .col-md-6.column
              .well
                h2 Add New Docker Server
                +addNewDockerServer
              .well
                h2 Remove Docker Server
                +removeDockerServer

            .col-md-6.column

              h2 pull Images
              +pullImageForm



        .tab-pane.fade#envsSettings
          .col-md-6.column
            h2 EnvTypes
            +envTypesTable
            //- h2 EnvTypes Creator
            //- +quickForm id="envTypeCreator" schema="EnvTypesSchema" type="method" meteormethod="createEnvType"
          .col-md-6.column
            h2 Envs
            +envsTableAdminPage
            h2 Envs Creator

            //- +autoForm id="envCreator" schema="EnvsSchema" type="method" meteormethod="createEnv"
            //-   +afQuickField name="imageTag" options=uniqueDockerImageTagsForAutoForm


      if isInRole "admin" "system"
        .tab-pane.fade#rolesSetting
          hr
          h2 Set Admins:
          +adminPageUsersTable

      //- if isInRole "admin" "system"
      //-   .tab-pane.fade#editMsgBoard
      //-     hr
      //-     h2 Milestone
      //-     +devMilestoneTable
      //-     hr
      //-     h2 Edit Message Board:
      //-     +msgEditBoard

      //-     hr
      //-     h2 Create Learning Resources:
      //-     +quickForm id="learningResourceCreatorForm" schema="learningResourceSchema" type="method" meteormethod="createLearningResource" template="bootstrap3-inline" label-class="sr-only" afFieldInput-placeholder="schemaLabel"
      //-     hr

      //- if isInRole "admin" "system"
      //-   .tab-pane.fade#userStatus
      //-     h2 User Status:
      //-     +userStatus

template(name="pullImageForm")
  //- +autoForm id="envCreator" schema="EnvsSchema" type="method" meteormethod="createEnv"
  //-   +afQuickField name="imageTag" options=uniqueDockerImageTagsForAutoForm
  hr
  h2 test
  if DockerServerPullImageSchema
    +autoForm id="pullImage" schema=DockerServerPullImageSchema type="method" meteormethod="submitPullImageJob"
      fieldset
        +afQuickField name="serverName" options=allowServerNames
        +afQuickField name="repoTag" options=allowImageTags
        //- label.control-label {{afFieldLabelText name="serverName"}}
        //- +afFieldInput name="serverName"
        //- strong {{{afFieldMessage name="serverName"}}}

        //- label.control-label {{afFieldLabelText name="dockerHubIp"}}
        //- +afFieldInput name="dockerHubIp" placeholder="dockerhub" type="text"
        //- strong {{{afFieldMessage name="dockerHubIp"}}}
        //- label.control-label {{afFieldLabelText name="imageName"}}
        //- +afFieldInput name="imageName"
        //- strong {{{afFieldMessage name="imageName"}}}
        //- label.control-label {{afFieldLabelText name="imageVersion"}}
        //- +afFieldInput name="imageVersion" type="text" placeholder="latest"
        //- strong {{{afFieldMessage name="imageVersion"}}}
      br
      button.btn.btn-primary(type='submit') submit

template(name="addNewDockerServer")
  +autoForm id="addNewDockerServer" schema=AddDockerServerSchema type="method" meteormethod="addNewServer"
    fieldset
      +afQuickField name="serverName"
      +afQuickField name="host"
      //- +afQuickField name="port"
      +afQuickField name="useIn"
      +afQuickField name="user"

    button.btn.btn-primary(type='submit') submit

template(name="removeDockerServer")
  +autoForm id="removeDockerServer" schema=RemoveDockerServerSchema type="method" meteormethod="RemoveDockerServer"
    fieldset
      +afQuickField name="serverId"

    button.btn.btn-primary(type='submit') submit
